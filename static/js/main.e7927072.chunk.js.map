{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["globalID","App","_useState","useState","_useState2","Object","slicedToArray","task","setTask","_useState3","_useState4","todos","setTodos","react_default","a","createElement","className","onSubmit","event","preventDefault","oldtodos","concat","toConsumableArray","todo","id","placeholder","type","value","onChange","target","map","item","index","key","onClick","itemID","oldTodo","filter","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"oMAGIA,SAAW,GA4CAC,MA1Cf,WAAe,IAAAC,EAEaC,mBAAS,IAFtBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEJK,EAFIH,EAAA,GAEEI,EAFFJ,EAAA,GAAAK,EAGeN,mBAAS,IAHxBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAGJE,EAHID,EAAA,GAGGE,EAHHF,EAAA,GAeX,OAAOG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAElBH,EAAAC,EAAAC,cAAA,uBAEAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaC,SAdjC,SAAoBC,GAChBA,EAAMC,iBAENP,EAAS,SAAAQ,GAEL,OADAZ,EAAQ,IACR,GAAAa,OAAAhB,OAAAiB,EAAA,EAAAjB,CAAWe,GAAX,CAAqB,CAAEG,KAAMhB,EAAMiB,GAAIxB,WAUvCa,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACbS,YAAY,aACZC,KAAK,OACLC,MAAOpB,EACPqB,SAAU,SAAAV,GACNV,EAAQU,EAAMW,OAAOF,UAE7Bd,EAAAC,EAAAC,cAAA,UAAQC,UAAU,WAAWU,KAAK,UAAlC,eAEJb,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,4BACLF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACTL,EAAMmB,IAAI,SAACC,EAAMC,GACd,OAAOnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUiB,IAAKF,EAAKP,IACtCX,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAce,EAAKR,MACjCV,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBkB,QAAS,kBArBxCC,EAqByDJ,EAAKP,QArBpDZ,EAAS,SAAAwB,GAAO,OAAIA,EAAQC,OAAO,SAAAN,GAAI,OAAIA,EAAKP,KAAOW,MAArF,IAAoBA,IAqBJ,gBC3BLG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH1C,EAAAC,EAAAC,cAACF,EAAAC,EAAM0C,WAAP,KACE3C,EAAAC,EAAAC,cAAC0C,EAAD,QAOJnB","file":"static/js/main.e7927072.chunk.js","sourcesContent":["import React, { useState} from 'react'\nimport './App.css'\n\nlet globalID = 0\n\nfunction App() {\n\n    const [task, setTask] = useState(\"\")\n    const [todos, setTodos] = useState([])\n\n    function createTodo(event) {\n        event.preventDefault()\n \n        setTodos(oldtodos => {\n            setTask('')\n            return [...oldtodos, { todo: task, id: globalID++ }]\n        })\n    }\n    function deleteItem(itemID) { setTodos(oldTodo => oldTodo.filter(item => item.id !== itemID)); }\n\n    return <div className='main-div'> \n\n        <h1>To Do App</h1>\n\n        <form className='form-field' onSubmit={createTodo}>\n            <input className='input-field'\n                placeholder='Enter Task'\n                type=\"text\"\n                value={task}\n                onChange={event => {\n                    setTask(event.target.value)\n                }} />\n            <button className='add-task' type=\"submit\"> Add Task </button>\n        </form>\n        <div><h2>List of Tasks</h2></div>\n        <ul className='list-task'>\n            {todos.map((item, index) => {\n                return <div className='task-ul' key={item.id}>\n                    <li className='list-items'>{item.todo}</li>\n                    <button className='delete-buttons' onClick={() => deleteItem(item.id)}>Delete</button>\n                </div>\n            })}\n        </ul>\n    </div>\n\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}